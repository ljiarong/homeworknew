package cn.edu.xmu.oomall.order.mapper.generator;

import cn.edu.xmu.oomall.order.dao.bo.OrderItem;
import cn.edu.xmu.oomall.order.mapper.generator.po.OrderItemPo;
import cn.edu.xmu.oomall.order.mapper.generator.po.OrderItemPoExample;
import java.util.List;

import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Service;

@Mapper
public interface OrderItemPoMapper extends JpaRepository<OrderItemPo, Long> {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_item
     *
     * @mbg.generated
     */
    @DeleteProvider(type=OrderItemPoSqlProvider.class, method="deleteByExample")
    int deleteByExample(OrderItemPoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_item
     *
     * @mbg.generated
     */
    @Delete({
        "delete from order_item",
        "where `id` = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_item
     *
     * @mbg.generated
     */
    @Insert({
        "insert into order_item (`order_id`, `onsale_id`, ",
        "`quantity`, `price`, ",
        "`discount_price`, `point`, ",
        "`name`, `activity_id`, ",
        "`coupon_id`, `commented`, ",
        "`creator_id`, `creator_name`, ",
        "`modifier_id`, `modifier_name`, ",
        "`gmt_create`, `gmt_modified`)",
        "values (#{orderId,jdbcType=BIGINT}, #{onsaleId,jdbcType=BIGINT}, ",
        "#{quantity,jdbcType=INTEGER}, #{price,jdbcType=BIGINT}, ",
        "#{discountPrice,jdbcType=BIGINT}, #{point,jdbcType=BIGINT}, ",
        "#{name,jdbcType=VARCHAR}, #{activityId,jdbcType=BIGINT}, ",
        "#{couponId,jdbcType=BIGINT}, #{commented,jdbcType=TINYINT}, ",
        "#{creatorId,jdbcType=BIGINT}, #{creatorName,jdbcType=VARCHAR}, ",
        "#{modifierId,jdbcType=BIGINT}, #{modifierName,jdbcType=VARCHAR}, ",
        "#{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Long.class)
    int insert(OrderItemPo row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_item
     *
     * @mbg.generated
     */
    @InsertProvider(type=OrderItemPoSqlProvider.class, method="insertSelective")
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Long.class)
    int insertSelective(OrderItemPo row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_item
     *
     * @mbg.generated
     */
    @SelectProvider(type=OrderItemPoSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="order_id", property="orderId", jdbcType=JdbcType.BIGINT),
        @Result(column="onsale_id", property="onsaleId", jdbcType=JdbcType.BIGINT),
        @Result(column="quantity", property="quantity", jdbcType=JdbcType.INTEGER),
        @Result(column="price", property="price", jdbcType=JdbcType.BIGINT),
        @Result(column="discount_price", property="discountPrice", jdbcType=JdbcType.BIGINT),
        @Result(column="point", property="point", jdbcType=JdbcType.BIGINT),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="activity_id", property="activityId", jdbcType=JdbcType.BIGINT),
        @Result(column="coupon_id", property="couponId", jdbcType=JdbcType.BIGINT),
        @Result(column="commented", property="commented", jdbcType=JdbcType.TINYINT),
        @Result(column="creator_id", property="creatorId", jdbcType=JdbcType.BIGINT),
        @Result(column="creator_name", property="creatorName", jdbcType=JdbcType.VARCHAR),
        @Result(column="modifier_id", property="modifierId", jdbcType=JdbcType.BIGINT),
        @Result(column="modifier_name", property="modifierName", jdbcType=JdbcType.VARCHAR),
        @Result(column="gmt_create", property="gmtCreate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="gmt_modified", property="gmtModified", jdbcType=JdbcType.TIMESTAMP)
    })
    List<OrderItemPo> selectByExample(OrderItemPoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_item
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "`id`, `order_id`, `onsale_id`, `quantity`, `price`, `discount_price`, `point`, ",
        "`name`, `activity_id`, `coupon_id`, `commented`, `creator_id`, `creator_name`, ",
        "`modifier_id`, `modifier_name`, `gmt_create`, `gmt_modified`",
        "from order_item",
        "where `id` = #{id,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="order_id", property="orderId", jdbcType=JdbcType.BIGINT),
        @Result(column="onsale_id", property="onsaleId", jdbcType=JdbcType.BIGINT),
        @Result(column="quantity", property="quantity", jdbcType=JdbcType.INTEGER),
        @Result(column="price", property="price", jdbcType=JdbcType.BIGINT),
        @Result(column="discount_price", property="discountPrice", jdbcType=JdbcType.BIGINT),
        @Result(column="point", property="point", jdbcType=JdbcType.BIGINT),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="activity_id", property="activityId", jdbcType=JdbcType.BIGINT),
        @Result(column="coupon_id", property="couponId", jdbcType=JdbcType.BIGINT),
        @Result(column="commented", property="commented", jdbcType=JdbcType.TINYINT),
        @Result(column="creator_id", property="creatorId", jdbcType=JdbcType.BIGINT),
        @Result(column="creator_name", property="creatorName", jdbcType=JdbcType.VARCHAR),
        @Result(column="modifier_id", property="modifierId", jdbcType=JdbcType.BIGINT),
        @Result(column="modifier_name", property="modifierName", jdbcType=JdbcType.VARCHAR),
        @Result(column="gmt_create", property="gmtCreate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="gmt_modified", property="gmtModified", jdbcType=JdbcType.TIMESTAMP)
    })
    OrderItemPo selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_item
     *
     * @mbg.generated
     */
    @UpdateProvider(type=OrderItemPoSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("row") OrderItemPo row, @Param("example") OrderItemPoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_item
     *
     * @mbg.generated
     */
    @UpdateProvider(type=OrderItemPoSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("row") OrderItemPo row, @Param("example") OrderItemPoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_item
     *
     * @mbg.generated
     */
    @UpdateProvider(type=OrderItemPoSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(OrderItemPo row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_item
     *
     * @mbg.generated
     */
    @Update({
        "update order_item",
        "set `order_id` = #{orderId,jdbcType=BIGINT},",
          "`onsale_id` = #{onsaleId,jdbcType=BIGINT},",
          "`quantity` = #{quantity,jdbcType=INTEGER},",
          "`price` = #{price,jdbcType=BIGINT},",
          "`discount_price` = #{discountPrice,jdbcType=BIGINT},",
          "`point` = #{point,jdbcType=BIGINT},",
          "`name` = #{name,jdbcType=VARCHAR},",
          "`activity_id` = #{activityId,jdbcType=BIGINT},",
          "`coupon_id` = #{couponId,jdbcType=BIGINT},",
          "`commented` = #{commented,jdbcType=TINYINT},",
          "`creator_id` = #{creatorId,jdbcType=BIGINT},",
          "`creator_name` = #{creatorName,jdbcType=VARCHAR},",
          "`modifier_id` = #{modifierId,jdbcType=BIGINT},",
          "`modifier_name` = #{modifierName,jdbcType=VARCHAR},",
          "`gmt_create` = #{gmtCreate,jdbcType=TIMESTAMP},",
          "`gmt_modified` = #{gmtModified,jdbcType=TIMESTAMP}",
        "where `id` = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(OrderItemPo row);
}
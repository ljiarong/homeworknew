package cn.edu.xmu.oomall.freight.mapper.generator;

import cn.edu.xmu.oomall.freight.mapper.generator.po.RegionPo;
import cn.edu.xmu.oomall.freight.mapper.generator.po.RegionPoExample;
import cn.edu.xmu.oomall.freight.mapper.generator.po.RegionPoExample.Criteria;
import cn.edu.xmu.oomall.freight.mapper.generator.po.RegionPoExample.Criterion;

import java.util.List;
import java.util.Map;

import static org.apache.ibatis.jdbc.SqlBuilder.*;

public class RegionPoSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table freight_region
     *
     * @mbggenerated
     */
    public String insertSelective(RegionPo record) {
        BEGIN();
        INSERT_INTO("freight_region");
        
        if (record.getPid() != null) {
            VALUES("`pid`", "#{pid,jdbcType=INTEGER}");
        }
        
        if (record.getLevel() != null) {
            VALUES("`level`", "#{level,jdbcType=TINYINT}");
        }
        
        if (record.getAreaCode() != null) {
            VALUES("`area_code`", "#{areaCode,jdbcType=BIGINT}");
        }
        
        if (record.getZipCode() != null) {
            VALUES("`zip_code`", "#{zipCode,jdbcType=INTEGER}");
        }
        
        if (record.getCityCode() != null) {
            VALUES("`city_code`", "#{cityCode,jdbcType=CHAR}");
        }
        
        if (record.getName() != null) {
            VALUES("`name`", "#{name,jdbcType=VARCHAR}");
        }
        
        if (record.getShortName() != null) {
            VALUES("`short_name`", "#{shortName,jdbcType=VARCHAR}");
        }
        
        if (record.getMergerName() != null) {
            VALUES("`merger_name`", "#{mergerName,jdbcType=VARCHAR}");
        }
        
        if (record.getPinyin() != null) {
            VALUES("`pinyin`", "#{pinyin,jdbcType=VARCHAR}");
        }
        
        if (record.getLng() != null) {
            VALUES("`lng`", "#{lng,jdbcType=DECIMAL}");
        }
        
        if (record.getLat() != null) {
            VALUES("`lat`", "#{lat,jdbcType=DECIMAL}");
        }
        
        if (record.getStatus() != null) {
            VALUES("`status`", "#{status,jdbcType=TINYINT}");
        }
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table freight_region
     *
     * @mbggenerated
     */
    public String selectByExample(RegionPoExample example) {
        BEGIN();
        if (example != null && example.isDistinct()) {
            SELECT_DISTINCT("`id`");
        } else {
            SELECT("`id`");
        }
        SELECT("`pid`");
        SELECT("`level`");
        SELECT("`area_code`");
        SELECT("`zip_code`");
        SELECT("`city_code`");
        SELECT("`name`");
        SELECT("`short_name`");
        SELECT("`merger_name`");
        SELECT("`pinyin`");
        SELECT("`lng`");
        SELECT("`lat`");
        SELECT("`status`");
        FROM("freight_region");
        applyWhere(example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            ORDER_BY(example.getOrderByClause());
        }
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table freight_region
     *
     * @mbggenerated
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        RegionPo record = (RegionPo) parameter.get("record");
        RegionPoExample example = (RegionPoExample) parameter.get("example");
        
        BEGIN();
        UPDATE("freight_region");
        
        if (record.getId() != null) {
            SET("`id` = #{record.id,jdbcType=INTEGER}");
        }
        
        if (record.getPid() != null) {
            SET("`pid` = #{record.pid,jdbcType=INTEGER}");
        }
        
        if (record.getLevel() != null) {
            SET("`level` = #{record.level,jdbcType=TINYINT}");
        }
        
        if (record.getAreaCode() != null) {
            SET("`area_code` = #{record.areaCode,jdbcType=BIGINT}");
        }
        
        if (record.getZipCode() != null) {
            SET("`zip_code` = #{record.zipCode,jdbcType=INTEGER}");
        }
        
        if (record.getCityCode() != null) {
            SET("`city_code` = #{record.cityCode,jdbcType=CHAR}");
        }
        
        if (record.getName() != null) {
            SET("`name` = #{record.name,jdbcType=VARCHAR}");
        }
        
        if (record.getShortName() != null) {
            SET("`short_name` = #{record.shortName,jdbcType=VARCHAR}");
        }
        
        if (record.getMergerName() != null) {
            SET("`merger_name` = #{record.mergerName,jdbcType=VARCHAR}");
        }
        
        if (record.getPinyin() != null) {
            SET("`pinyin` = #{record.pinyin,jdbcType=VARCHAR}");
        }
        
        if (record.getLng() != null) {
            SET("`lng` = #{record.lng,jdbcType=DECIMAL}");
        }
        
        if (record.getLat() != null) {
            SET("`lat` = #{record.lat,jdbcType=DECIMAL}");
        }
        
        if (record.getStatus() != null) {
            SET("`status` = #{record.status,jdbcType=TINYINT}");
        }
        
        applyWhere(example, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table freight_region
     *
     * @mbggenerated
     */
    public String updateByExample(Map<String, Object> parameter) {
        BEGIN();
        UPDATE("freight_region");
        
        SET("`id` = #{record.id,jdbcType=INTEGER}");
        SET("`pid` = #{record.pid,jdbcType=INTEGER}");
        SET("`level` = #{record.level,jdbcType=TINYINT}");
        SET("`area_code` = #{record.areaCode,jdbcType=BIGINT}");
        SET("`zip_code` = #{record.zipCode,jdbcType=INTEGER}");
        SET("`city_code` = #{record.cityCode,jdbcType=CHAR}");
        SET("`name` = #{record.name,jdbcType=VARCHAR}");
        SET("`short_name` = #{record.shortName,jdbcType=VARCHAR}");
        SET("`merger_name` = #{record.mergerName,jdbcType=VARCHAR}");
        SET("`pinyin` = #{record.pinyin,jdbcType=VARCHAR}");
        SET("`lng` = #{record.lng,jdbcType=DECIMAL}");
        SET("`lat` = #{record.lat,jdbcType=DECIMAL}");
        SET("`status` = #{record.status,jdbcType=TINYINT}");
        
        RegionPoExample example = (RegionPoExample) parameter.get("example");
        applyWhere(example, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table freight_region
     *
     * @mbggenerated
     */
    public String updateByPrimaryKeySelective(RegionPo record) {
        BEGIN();
        UPDATE("freight_region");
        
        if (record.getPid() != null) {
            SET("`pid` = #{pid,jdbcType=INTEGER}");
        }
        
        if (record.getLevel() != null) {
            SET("`level` = #{level,jdbcType=TINYINT}");
        }
        
        if (record.getAreaCode() != null) {
            SET("`area_code` = #{areaCode,jdbcType=BIGINT}");
        }
        
        if (record.getZipCode() != null) {
            SET("`zip_code` = #{zipCode,jdbcType=INTEGER}");
        }
        
        if (record.getCityCode() != null) {
            SET("`city_code` = #{cityCode,jdbcType=CHAR}");
        }
        
        if (record.getName() != null) {
            SET("`name` = #{name,jdbcType=VARCHAR}");
        }
        
        if (record.getShortName() != null) {
            SET("`short_name` = #{shortName,jdbcType=VARCHAR}");
        }
        
        if (record.getMergerName() != null) {
            SET("`merger_name` = #{mergerName,jdbcType=VARCHAR}");
        }
        
        if (record.getPinyin() != null) {
            SET("`pinyin` = #{pinyin,jdbcType=VARCHAR}");
        }
        
        if (record.getLng() != null) {
            SET("`lng` = #{lng,jdbcType=DECIMAL}");
        }
        
        if (record.getLat() != null) {
            SET("`lat` = #{lat,jdbcType=DECIMAL}");
        }
        
        if (record.getStatus() != null) {
            SET("`status` = #{status,jdbcType=TINYINT}");
        }
        
        WHERE("`id` = #{id,jdbcType=INTEGER}");
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table freight_region
     *
     * @mbggenerated
     */
    protected void applyWhere(RegionPoExample example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            WHERE(sb.toString());
        }
    }
}